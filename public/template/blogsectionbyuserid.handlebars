<link href="/summernote/dist/summernote.css" rel="stylesheet">
<script src="/summernote/dist/summernote.js"></script>

{{#each blogs.result}}
<div class="group blog_{{this._id}}">
  <h3>
    <span class="blogheader_{{this._id}}">{{{this.topic}}}</span>

    <div id="editblog" class="editblog">
      <span data-key="{{this._id}}" class="edit glyphicon glyphicon-edit"></span>
      <span data-key="{{this._id}}" class="remove glyphicon glyphicon-remove"></span>
    </div>

  </h3>
  <div>
    <div class="showblogdetails_{{this._id}}">
      <strong><span class="blogpostdate glyphicon glyphicon-time"></span> Posted on {{#CovertISODate this.creationdate}}{{/CovertISODate}}</strong>
      <br/><br/>
      <span data-toggle="modal" data-blogid="{{this._id}}" data-target="#myComment" class="showmycomments">
                <a href="#"><u>View/Edit my comments</u></a>
            </span>
      <hr>
      <h4><i>Blog Description</i></h4>
      {{{this.content}}}
    </div>
    <div class="blogeditform_{{this._id}} hidden">
      <div class="blogeditvalidationpanel hidden">
      </div>

      <div>
        <form id="editblogfrm" class="form-horizontal">
          <div class="form-group">
            <label class="control-label" for="topic">Blog Topic</label>
            <div>
              <input type="text" class="form-control" maxlength="100" id="topic_{{this._id}}" name="topic_{{this._id}}" autofocus="autofocus"
                value="{{{this.topic}}}">
            </div>
          </div>
          <div class="form-group">
            <label class="control-label" for="content_{{this._id}}">Content</label>
            <div>
              <textarea class="input" rows="10" cols="85" maxlength="5000" id="content_{{this._id}}" name="content_{{this._id}}" autofocus="autofocus">{{{this.content}}}</textarea>
            </div>
          </div>
          <div class="form-group">
            <label class="control-label" for="category_{{this._id}}">Blog Category</label>
            <div>
              <select name="category_{{this._id}}" id="category_{{this._id}}" class="form-control">
                    {{#each ../category}}
                        {{#Compare ../this.categorykey this.key}} 
                          <option selected="selected" value="{{this.key}}">{{this.name}}</option>
                        {{else}}
                          <option value="{{this.key}}">{{this.name}}</option>
                        {{/Compare}}
                    {{/each}} 
                    </select>
            </div>
          </div>

          <input type="hidden" id="createdby_{{this._id}}" name="createdby_{{this._id}}" value="{{this.createdby}}" />
          <input type="hidden" id="status_{{this._id}}" name="status" value="{{this.status}}" />
          <input type="hidden" id="index_{{this._id}}" name="index_{{this._id}}" value="{{index}}" />
          <input type="hidden" id="creationdate_{{this._id}}" name="creationdate_{{this._id}}" value="{{this.creationdate}}" />
          <input type="hidden" id="actiontype_{{this._id}}" name="actiontype_{{this._id}}" value="edit" />
          <div class="form-group">
            <div>
              <button type="button" class="btn btn-info btn-sm saveblog" data-key="{{this._id}}">Save</button>
              <button type="button" class="btn btn-info btn-sm cancel canceleditblog" data-key="{{this._id}}">Cancel</button>
            </div>
          </div>
        </form>
      </div>

      <script>
              $(document).ready(function () {
                var id = "#content_{{this._id}}";
                $(id).html($("#txt_{{this._id}}").val());
                $(id).summernote({
                  toolbar: [
                    ['style', ['style']],
                    //[ 'font', [ 'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear'] ],
                    ['font', ['bold', 'italic', 'underline']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ol', 'ul', 'paragraph', 'height']],
                    //[ 'table', [ 'table' ] ],
                    ['insert', ['link', 'picture']],
                    //[ 'view', [ 'undo', 'redo', 'fullscreen', 'codeview', 'help' ] ]
                    ['view', ['undo', 'redo', 'fullscreen', 'codeview']]
                  ]
                });
              });
            
      </script>
    </div>
  </div>
</div>
{{/each}}
<script>
                $(function () {
                  $('.edit').click(function () {
                    var id = $(this).data("key");
                    console.log(id);

                    $('.showblogdetails_' + id).addClass("hidden");
                    $('.blogeditform_' + id).removeClass("hidden");
                  });

                  $(".canceleditblog").on("click", function () {
                    var id = $(this).data("key");

                    $('.showblogdetails_' + id).removeClass("hidden");
                    $('.blogeditform_' + id).addClass("hidden");
                  });

                  $('.remove').on("click", function () {
                    var id = $(this).data("key");
                    console.log("id " + id);

                    DeleteBlogByID(id);
                  });

                  $(".showmycomments").on("click", function () {

                    var selectedBlogIDCmnt = $(this).data("blogid");

                    var loggedinuserid = $("#userid").val();

                    console.log("blogid : " + selectedBlogIDCmnt + " , loggedinuserid : " + loggedinuserid);

                    if (selectedBlogIDCmnt != "") {
                      LoadCommentHistoryV1(selectedBlogIDCmnt, loggedinuserid);
                    } else {
                      $(".mycommentdiv").html("");
                    }
                  });

                  $(".mycommentdiv").on("click", "span>button", function () {
                    console.log()
                    console.log("click");
                    console.log("Click :" + $(this).closest(".commenttable").data("id"));
                    console.log($(this).parent("span").find($("input[type='radio']:checked")).data("type"));
                    console.log($("#blogcomment_" + $(this).closest(".commenttable").data("id")).val());
                    console.log("click");

                    var commentid = $(this).closest(".commenttable").data("id");
                    var comments = $("#blogcomment_" + commentid).val();
                    var status = $(this).parent("span").find($("input[type='radio']:checked")).data("type");
                    var data = "";

                    $(".blogcommentvalidationpanel_" + commentid).html("");
                    $(".blogcommentvalidationpanel_" + commentid).addClass("hidden");

                    if (comments != undefined) {
                      data = {
                        comment: comments,
                        _id: commentid,
                        status: status
                      };

                      if (data.comment != "" && data._id != null && data.status != null) {
                        swal({
                          title: "Are you sure?",
                          text: "Are you sure that you want to update this records?",
                          type: "warning",
                          showCancelButton: true,
                          closeOnConfirm: false,
                          confirmButtonText: "Yes, update it!",
                          confirmButtonColor: "#ec6c62"
                        }, function () {
                          $.ajax({
                            method: "Post",
                            url: "/myprofile/updatecomment",
                            data: data
                          })
                            .done(function (result) {
                              swal("Updated! Comment is successfully updated!", "Success");
                            })
                            .error(function (data) {
                              swal("Oops", "We couldn't connect to the server!", "Error");
                            });
                        });
                      } else {
                        var msgPanel = $("<div></div>");
                        msgPanel.append(
                          ErrorMessage("<strong>Warning!</strong> Comment cannot be empty.")
                        );
                        $(".blogcommentvalidationpanel_" + commentid).html(msgPanel).removeClass("hidden");
                      }

                    } else {
                      data = {
                        _id: commentid,
                        status: status
                      };

                      if (data._id != null && data.status != null) {
                        swal({
                          title: "Are you sure?",
                          text: "Are you sure that you want to update this records?",
                          type: "warning",
                          showCancelButton: true,
                          closeOnConfirm: false,
                          confirmButtonText: "Yes, update it!",
                          confirmButtonColor: "#ec6c62"
                        }, function () {
                          $.ajax({
                            method: "Post",
                            url: "/myprofile/updatecomment",
                            data: data
                          })
                            .done(function (result) {
                              swal("Updated! Comment is successfully updated!", "Success");
                            })
                            .error(function (data) {
                              swal("Oops", "We couldn't connect to the server!", "Error");
                            });
                        });
                      }
                    }
                  });
                })

</script>